


  const match = { M: 1000, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 };

    const convert = (num) => {
        if (num < 1 || Number.isNaN(num)) return "";
        let result = '';
    
        Object.entries(match).forEach(([key, val]) => {
            while ( num >= val ) {
                result += key;
                num -= val;
            }
        })
    
        return result;
    }







      function convertArab(k) {
        if (k == 'I'){
            return 1;
        } else if (k == 'II' ) {
            return 2;
        } else if ( k == 'III' ) {
            return 3;
        } else if ( k == 'IV' ) { 
            return 4;
        } else if ( k == 'V' ) {
            return 5;
        } else if ( k == 'VI' ) { 
            return 6; 
        }  else if ( k == 'VII' ) { 
            return 7; 
        }  else if ( k == 'VIII' ) { 
            return 8; 
        }  else if ( k == 'IX' ) { 
            return 9; 
        }  else if ( k == 'X' ) { 
            return 10; 
        }        else throw new Error
    }







function calculator(string) {
 
    let agd = string.split(' ');

    let num1 = agd[0];
    let num2 = agd[2];
    let mark = agd[1];
    let reg = new RegExp(num1, 'i',);
    let reg2 = new RegExp(num2, 'i',);
    let regRim = new RegExp(num1, 'i');
    let regRim2 = new RegExp(num1, 'i');
    if (string.trim().length === 0 ) throw new Error('')
    if (string.trim().length === 1 ) throw new Error
    if (string.trim().length === 2 ) throw new Error
    if (string.trim().length === 3 ) throw new Error 
    if (!/([IVXLCDMZ]+)|(\d+)/g.test(string) || !/[+\-*\/]/.test(string)) throw new Error
    if (/^[1-9]\d*/.test(reg) ) throw new Error 
    if (/^[1-9]\d*/.test(reg2) ) throw new Error 

    if (  reg.test(['1','2','3','4','5','6','7','8','9','10']) === true && reg2.test(['1','2','3','4','5','6','7','8','9','10']) === true  ) {  
        if (num1 == 0 || Number.isNaN(num1) || num2 == 0  || Number.isNaN(num2) )  throw new Error
        if (/^[1-9]\d*/.test(reg) ) throw new Error 
        if(string.trim().length >7  ) throw new Error
        

        if(num1 <= 11 || num2 <= 11 || num1 >= 1 || num2 >=1  ) {
            switch (mark) {
                case "*" :
                  let n = +num1 * +num2;
                    return String(Math.floor(n));              
                case "+":
                  let b =  +num1 + +num2;        
                    return String(Math.floor(b)); 
                case "-":
                  let v =  +num1 - +num2;
                    return String(Math.floor(v)); 
                case "/":
                  let c =  +num1 / +num2;
                    return String(Math.floor(c));

              }  
        } 
    } 



     if (agd.length >=3 && agd.length < 5  && regRim.test(['I','II','III','IV','V','VI','VII','VIII','IX','X']) === true && regRim2.test(['I','II','III','IV','V','VI','VII','VIII','IX','X']) === true  ) {
        if (convertArab(num1), convertArab(num2)  ){
            switch(mark){
                  case '+':
                    let j = convertArab(num1)+convertArab(num2);
                    if ( j <= 0 ) {
                        return '';
                    } else if(j > 0 ) {
                        return String(convert(j));
                    }
                  case '*':
                      two =  convertArab(num1)*convertArab(num2);
                      if ( two <= 0 ) {
                        return '';
                      } else if ( two > 0) { 
                        return String(convert(two));
                      }
                      
                  case '-':
                      let t = convertArab(num1)-convertArab(num2);
                      if ( t <= 0 ) {
                        return '';
                      } else if ( t > 0) { 
                        return String(convert(t));
                      }                  
                  case '/':
                      let fa =  convertArab(num1)/convertArab(num2);
                      if ( fa <= 0 ) {
                        return '';
                      } else if (fa > 0) { 
                        return String(convert(fa));;
                      }                    
            } 
        } 

    } else if (convertArab(num1) >= 11 || convertArab(num2) >= 11 ) throw new Error 
     
}


module.exports = calculator; // Не трогайте эту строчку
